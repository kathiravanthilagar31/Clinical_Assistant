# A workflow to build and deploy a containerized application to Azure Container Apps.
#
# To use this workflow, you will need to complete the following setup steps:
#
# 1. Create a resource group and an Azure Container Registry (ACR)
#
# 2. Create a service principal with the AcrPush role for the ACR
#
# 3. Create the following secrets in your GitHub repository:
#    - AZURE_CREDENTIALS: The JSON output from the service principal creation
#    - REGISTRY_USERNAME: The client id of the service principal
#    - REGISTRY_PASSWORD: The client secret of the service principal
#    - OPENAI_API_KEY: Your OpenAI API key
#
# 4. Update the values for the environment variables below
#
name: Build and Deploy Clinical Assistant

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches:
      - main
  # Allow manual trigger
  workflow_dispatch:

env:
  # The name of the resource group that contains the container app and registry
  RESOURCE_GROUP: 'clinical-chatbot'
  # The name of the container app
  CONTAINER_APP_NAME: 'clinicalbot'
  # The name of the container registry
  CONTAINER_REGISTRY: 'clinicalapp.azurecr.io'
  # The name of the container image
  IMAGE_NAME: 'clinicalbot'

jobs:
  buildImage:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CLINICALBOT_AZURE_CREDENTIALS }}

      - name: Log in to container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ secrets.CLINICALBOT_REGISTRY_USERNAME }}
          password: ${{ secrets.CLINICALBOT_REGISTRY_PASSWORD }}

      - name: Build and push image to registry
        run: |-
          docker build . -t ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: buildImage
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.CLINICALBOT_AZURE_CREDENTIALS }}

      - name: Deploy to container app
        uses: azure/container-apps-deploy-action@v2
        with:
          containerAppName: ${{ env.CONTAINER_APP_NAME }}
          resourceGroup: ${{ env.RESOURCE_GROUP }}
          imageToDeploy: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          environmentVariables: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}